{"version":3,"sources":["components/BugzyField.js","components/LoginForm.js","components/CenteredPaper.js","components/NotificationBox.js","screens/LoginFormScreen.js","util/Util.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","error","color","palette","main","BugzyField","props","classes","adornment","InputAdornment","position","Tooltip","className","title","errorMessages","placement","FormControl","fullWidth","length","disabled","InputLabel","htmlFor","label","Input","id","value","onChange","type","aria-describedby","endAdornment","formWrapper","display","flexDirection","alignItems","width","maxWidth","textField","marginLeft","spacing","marginRight","marginTop","wrapper","margin","buttonProgress","green","top","left","avatar","backgroundColor","pink","marginBottom","spinner","LoginForm","React","useState","username","errors","password","values","setValues","loading","setLoading","globalErrors","setGlobalErrors","handleChange","name","event","err","test","target","renderedErrors","map","Typography","variant","topCircle","CircularProgress","onSubmit","e","handleSubmit","then","console","log","catch","message","Button","button","paper","paddingBottom","paddingTop","CenteredPaper","elevation","children","checkIcon","NotificationBox","root","LoginFormScreen","users","setUsers","undefined","signInSuccess","setsignInSuccess","mainPaper","preventDefault","Promise","resolve","reject","some","u","Error","userCreationPaper","onClick","user","Faker","internet","email","concat","JSON","stringify","AppRouter","path","component","App","Helmet","charSet","rel","href","process","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8ea821b.chunk.js","sourcesContent":["import React from \"react\";\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Error from '@material-ui/icons/Error';\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    error: {\n        color: theme.palette.error.main\n    }\n}));\n\n\nexport default function BugzyField(props) {\n\n    const classes = useStyles();\n\n    const adornment = <InputAdornment position=\"start\">\n            <Tooltip className={classes.error} title={props.errorMessages} placement=\"right-end\">\n                <Error />\n            </Tooltip>\n        </InputAdornment>;\n\n\n    return(\n        <FormControl\n            fullWidth={props.fullWidth}\n            error={props.errorMessages.length > 0  || props.error}\n            disabled={props.disabled}\n            className={props.className}\n        >\n            <InputLabel htmlFor=\"component-error\">{props.label}</InputLabel>\n            <Input\n                id=\"component-error\"\n                value={props.value}\n                onChange={props.onChange}\n                type={props.type || 'text'}\n                aria-describedby=\"component-error-text\"\n                endAdornment={props.errorMessages.length > 0 ? adornment : <></>}\n            />\n        </FormControl>\n    )\n}","import React from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport Button from '@material-ui/core/Button';\nimport {green, pink} from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport BugzyField from \"../components/BugzyField\";\n\n\nconst useStyles = makeStyles(theme => ({\n    formWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '60%',\n        maxWidth: 300\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1)\n    },\n    wrapper: {\n        marginTop: '20px',\n        margin: theme.spacing(1),\n        position: 'relative',\n    },\n    buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        marginTop: -12,\n        marginLeft: -12,\n    },\n    avatar: {\n        color: '#fff',\n        backgroundColor: pink[500],\n        marginBottom: theme.spacing(3)\n    },\n    spinner: {\n        marginBottom: theme.spacing(3)\n    }\n}));\n\nfunction LoginForm(props) {\n    const classes = useStyles();\n    const [values, setValues] = React.useState({\n        username: {value: '', errors: []},\n        password: {value: '', errors: []}\n    });\n\n    const [loading, setLoading] = React.useState(false);\n    const [globalErrors, setGlobalErrors] = React.useState([]);\n\n    const handleChange = name => event => {\n        let err = [];\n        if ( name === 'username' ) {\n            if (! /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(event.target.value) ) {\n                err = ['Not a valid email']\n            }\n        }\n        setValues({ ...values, [name]: { value: event.target.value, errors: err } });\n        setGlobalErrors([])\n    };\n\n    const renderedErrors = globalErrors.map((error) =>\n        (<Typography color={'error'} variant={'caption'}> {error} </Typography>)\n    );\n\n    let topCircle =  <Avatar className={classes.avatar}>\n        <AccountCircle />\n    </Avatar>;\n\n    return (\n        <>\n            { loading ? <CircularProgress className={classes.spinner} /> : topCircle}\n            { loading ? \"\" : renderedErrors}\n            <form className={classes.formWrapper}\n                  onSubmit={(e) => {\n                      setLoading(true);\n                      props.handleSubmit(e, values.username.value, values.password.value)\n                      .then(() => {\n                          console.log(\"Successful resolution\");\n                          setLoading(false)\n                      })\n                      .catch((error) => {\n                          console.log(\"Unsuccessful resolution\");\n                          setLoading(false);\n                          setGlobalErrors([error.message])\n                      })\n                  }}\n            >\n                <BugzyField\n                    id=\"standard-name\"\n                    label=\"Username\"\n                    fullWidth={true}\n                    error={globalErrors.length > 0}\n                    errorMessages={values.username.errors}\n                    disabled={loading}\n                    className={classes.textField}\n                    value={values.username.value}\n                    onChange={handleChange('username')}\n                    margin=\"normal\"\n                />\n\n                <BugzyField\n                    id=\"standard-name\"\n                    label=\"Password\"\n                    type={'password'}\n                    fullWidth={true}\n                    error={globalErrors.length > 0}\n                    errorMessages={values.password.errors}\n                    disabled={loading}\n                    className={classes.textField}\n                    value={values.password.value}\n                    onChange={handleChange('password')}\n                    margin=\"normal\"\n                />\n\n                <div className={classes.wrapper}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.button}\n                        type=\"submit\"\n                    >\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </>\n    )\n}\n\nexport default LoginForm\n\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper/Paper\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        width: '80%',\n        marginTop: '5%',\n        marginBottom: '5%',\n        paddingBottom: theme.spacing(5),\n        paddingTop: theme.spacing(5)\n    },\n}));\n\nexport default function CenteredPaper(props) {\n\n    const classes = useStyles();\n\n    return(\n        <Paper className={ classes.paper } id={ props.id || 'paper' } elevation={ props.elevation || 3 }>\n            {props.children}\n        </Paper>\n    )\n}\n","import CenteredPaper from \"./CenteredPaper\";\nimport Avatar from \"@material-ui/core/Avatar/Avatar\";\nimport CheckIcon from '@material-ui/icons/Check';\nimport Typography from \"@material-ui/core/Typography/Typography\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {green} from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles(theme => ({\n    checkIcon: {\n        backgroundColor: green[500],\n        marginBottom: theme.spacing(3)\n    },\n}));\n\nexport default function NotificationBox() {\n\n    const classes = useStyles();\n\n    return (\n        <CenteredPaper>\n            <Avatar className={classes.checkIcon}>\n                <CheckIcon/>\n            </Avatar>\n            <Typography> Success </Typography>\n        </CenteredPaper>\n    )\n}\n\n","import React from \"react\";\nimport * as Promise from \"bluebird\";\nimport LoginForm from \"../components/LoginForm\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CenteredPaper from \"../components/CenteredPaper\";\nimport NotificationBox from \"../components/NotificationBox\";\nimport { generateUser } from \"../util/Util\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    button: {\n        margin: '20px'\n    },\n    checkIcon: {\n        backgroundColor: green[500],\n        marginBottom: theme.spacing(3)\n    },\n}));\n\nfunction LoginFormScreen() {\n\n    const delayTime = 1000;\n    const classes = useStyles();\n    const [users, setUsers] = React.useState([]);\n    const [signInSuccess, setsignInSuccess] = React.useState(undefined);\n\n    const handleSubmit = (e, username, password) => {\n        e.preventDefault();\n        return Promise.delay(delayTime)\n        .then(() => {\n            return new Promise(function(resolve, reject) {\n                if (users.some(u => (u.username === username && u.password === password))) {\n                    console.log(\"Good login.\");\n                    setsignInSuccess(true);\n                    resolve()\n                }\n                else {\n                    console.log(\"Bad login.\");\n                    setsignInSuccess(false);\n                    reject(new Error('Incorrect username or password'))\n                }\n            })\n        });\n    };\n\n    const appendRandomUser = () => {\n        const user = generateUser();\n        setUsers(users.concat([user]))\n    };\n\n    // Login hasn't occurred yet\n    let mainPaper = <CenteredPaper>\n        <LoginForm\n            handleSubmit={handleSubmit}\n        />\n    </CenteredPaper>;\n\n    let userCreationPaper = <CenteredPaper>\n        <Typography>Existing Users</Typography>\n        <Button\n            onClick={appendRandomUser}\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n        >\n            Add User\n        </Button>\n\n        <CenteredPaper elevation={1} id={'jsonText'}>\n            <pre>{JSON.stringify(users, null, 2) }</pre>\n        </CenteredPaper>\n    </CenteredPaper>;\n\n    return (\n        <div className={classes.root} id={'pageRoot'}>\n\n            { signInSuccess ? <NotificationBox/> : mainPaper }\n            { userCreationPaper }\n        </div>\n    )\n}\n\nexport default LoginFormScreen\n\n","import Faker from \"faker\";\n\nexport function generateUser() {\n    return {\n        username: Faker.internet.email(),\n        password: Faker.internet.password()\n    };\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport LoginFormScreen from './screens/LoginFormScreen'\n\n\nfunction AppRouter() {\n    return(\n        <Router>\n            <Route path=\"/\" component={LoginFormScreen} />\n        </Router>\n    )\n}\n\nexport default AppRouter","import React from 'react';\nimport { Helmet } from \"react-helmet\";\nimport AppRouter from './AppRouter'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Helmet>\n            <meta charSet=\"utf-8\" />\n            <title>Bugzy</title>\n            <link rel=\"icon\" type=\"image/jpg\" href={`${process.env.PUBLIC_URL}/logo.jpg`} />\n        </Helmet>\n        <AppRouter />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}